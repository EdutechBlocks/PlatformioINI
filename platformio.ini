; PlatformIO Project Configuration File
; Configurações comuns para todos os ambientes ESP32
[env]
platform = espressif32 @ 6.12.0
platform_packages =
    tool-esptoolpy @ ~1.30100.0
framework = arduino
monitor_speed = 115200
upload_speed = 921600
board_build.f_cpu = 160000000L
board_build.f_flash = 80000000L
board_build.flash_mode = qio

; Flags de compilação
build_flags =
    -DCORE_DEBUG_LEVEL=0
    -O2
    -ffunction-sections
    -fdata-sections
    -Wl,--gc-sections
    -fno-rtti
    -fno-exceptions
    -mlongcalls
    -mtext-section-literals

; Configurações de biblioteca
lib_archive = yes
lib_ldf_mode = deep+
lib_deps = 
    https://github.com/EdutechBlocks/Adafruit-ST7735.git
    https://github.com/EdutechBlocks/Adafruit-GFX-Library.git
    https://github.com/EdutechBlocks/Adafruit-seesaw-Library.git
    https://github.com/EdutechBlocks/Adafruit_BusIO.git
    https://github.com/EdutechBlocks/Adafruit-SSD1306.git
    https://github.com/EdutechBlocks/ArduinoJson.git
    https://github.com/EdutechBlocks/Adafruit-Unified-Sensor.git
    https://github.com/EdutechBlocks/EDUTECH-tone.git
    https://github.com/EdutechBlocks/EDUTECH-music.git
    https://github.com/EdutechBlocks/EDUTECH-iot.git
    https://github.com/EdutechBlocks/EDUTECH-fonts.git
    https://github.com/EdutechBlocks/EDUTECH-display.git
    https://github.com/EdutechBlocks/EDUTECH-defines.git
    https://github.com/EdutechBlocks/BMP180.git
    https://github.com/EdutechBlocks/DHT-sensor-library.git
    https://github.com/EdutechBlocks/ESP32-AnalogWrite.git
    https://github.com/EdutechBlocks/ESP32-Servo.git
    https://github.com/EdutechBlocks/ServoEasing.git
    https://github.com/EdutechBlocks/SerialCommand.git
    https://github.com/EdutechBlocks/DSB18B20.git
    https://github.com/EdutechBlocks/EspAlexa.git
    https://github.com/EdutechBlocks/ESP32-SharpIR.git
    https://github.com/EdutechBlocks/NewPing.git
    https://github.com/EdutechBlocks/OneWire.git
    Wire
    SPI

; ======================
; Ambientes base
; ======================
[env:esp32dev]
board = esp32dev
build_src_filter = +<esp32dev/**>

; ======================
; Base OTA (herdada)
; ======================
[env:esp32_ota_base]
board = esp32dev
upload_protocol = espota
upload_flags =
    --auth=
    --port=3232
    --host_port=8266
    --timeout=30
    --debug
    --progress

; ======================
; Ambientes OTA (alunos)
; ======================
[env:esp32_aluno01]
extends = env:esp32_ota_base
build_src_filter = +<esp32_aluno01/**>
upload_port = aluno01.local

[env:esp32_aluno02]
extends = env:esp32_ota_base
build_src_filter = +<esp32_aluno02/**>
upload_port = aluno02.local

[env:esp32_aluno03]
extends = env:esp32_ota_base
build_src_filter = +<esp32_aluno03/**>
upload_port = aluno03.local

[env:esp32_aluno04]
extends = env:esp32_ota_base
build_src_filter = +<esp32_aluno04/**>
upload_port = aluno04.local

[env:esp32_aluno05]
extends = env:esp32_ota_base
build_src_filter = +<esp32_aluno05/**>
upload_port = aluno05.local

[env:esp32_aluno06]
extends = env:esp32_ota_base
build_src_filter = +<esp32_aluno06/**>
upload_port = aluno06.local

[env:esp32_aluno07]
extends = env:esp32_ota_base
build_src_filter = +<esp32_aluno07/**>
upload_port = aluno07.local

[env:esp32_aluno08]
extends = env:esp32_ota_base
build_src_filter = +<esp32_aluno08/**>
upload_port = aluno08.local

[env:esp32_aluno09]
extends = env:esp32_ota_base
build_src_filter = +<esp32_aluno09/**>
upload_port = aluno09.local

[env:esp32_aluno10]
extends = env:esp32_ota_base
build_src_filter = +<esp32_aluno10/**>
upload_port = aluno10.local
